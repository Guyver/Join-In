<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_20) on Mon Jul 12 12:41:36 CEST 2010 -->
<TITLE>
DeviceManager
</TITLE>

<META NAME="date" CONTENT="2010-07-12">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="DeviceManager";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/DeviceManager.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../control/IEventCommModule.html" title="interface in control"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?control/DeviceManager.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="DeviceManager.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
control</FONT>
<BR>
Class DeviceManager</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../resources/inherit.gif" ALT="extended by "><B>control.DeviceManager</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>edu.unsw.cse.wiiboard.WiiBoardDiscoveryListener</DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>DeviceManager</B><DT>extends <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A><DT>implements edu.unsw.cse.wiiboard.WiiBoardDiscoveryListener</DL>
</PRE>

<P>
A singleton class which has all necessary logic to offer the different kind of gadget services.
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>Santiago Hors Fraile</DD>
</DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private static&nbsp;<A HREF="../control/DeviceManager.html" title="class in control">DeviceManager</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#dm">dm</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This object is the only object that can exist of this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>(package private) &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#noninCounter">noninCounter</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This field counts the number of Nonins that have been connected.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>(package private) &nbsp;NoninPackage.NoninManager</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#noninManager">noninManager</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This object is the manager of the Nonin.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>(package private) &nbsp;edu.unsw.cse.wiiboard.WiiBoardDiscoverer</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#wbd">wbd</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This field represents the discoverer of the WiiBoard.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>(package private) &nbsp;edu.unsw.cse.wiiboard.WiiBoard</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#wiiBoard">wiiBoard</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This field represents the WiiBoard itself.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>(package private) &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#wiiBoardCounter">wiiBoardCounter</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This field counts the number of connected WiiBoards.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>(package private) &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Integer.html?is-external=true" title="class or interface in java.lang">Integer</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Integer.html?is-external=true" title="class or interface in java.lang">Integer</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#wiiMoteCounter">wiiMoteCounter</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This field maps the number of connected WiiMote.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>(package private) &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Integer.html?is-external=true" title="class or interface in java.lang">Integer</A>,org.wiigee.device.Wiimote&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#wiiMoteCreated">wiiMoteCreated</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This field maps the connected WiiMote objects.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../control/DeviceManager.html#DeviceManager()">DeviceManager</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#dropNonin()">dropNonin</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;You have to call this function when you do not need one service of the Nonin any longer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#dropWiiBoard()">dropWiiBoard</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;You have to call this function when you do not need one service of the WiiBoard any longer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#dropWiiMote(int)">dropWiiMote</A></B>(int&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;You have to call this function when you do not need one service of the WiiMote any longer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../control/DeviceManager.html" title="class in control">DeviceManager</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#getDeviceManager()">getDeviceManager</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a new instance of DeviceManager if it did not exist or the instance that was created if there was a created instance already.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../launchers/NoninLauncher.html" title="class in launchers">NoninLauncher</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#getNoninLauncher()">getNoninLauncher</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a new Nonin-service launcher if there was not any NoninLauncher created yet or a reference to the created object if there was one created already.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../launchers/NunchukAccelerationLauncher.html" title="class in launchers">NunchukAccelerationLauncher</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#getNunchukAccelerationLauncher(int)">getNunchukAccelerationLauncher</A></B>(int&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a new NunchukAccelerationLauncher from the WiiMote whose label is the one given as parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../launchers/NunchukAnalogStickLauncher.html" title="class in launchers">NunchukAnalogStickLauncher</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#getNunchukAnalogStickLauncher(int)">getNunchukAnalogStickLauncher</A></B>(int&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a new NunchukAnalogStickLauncher from the WiiMote whose label is the one given as parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../launchers/NunchukButtonsLauncher.html" title="class in launchers">NunchukButtonsLauncher</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#getNunchukButtonsLauncher(int)">getNunchukButtonsLauncher</A></B>(int&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a new NunchukButtonsLauncher from the WiiMote whose label is the one given as parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../launchers/WiiBoardLauncher.html" title="class in launchers">WiiBoardLauncher</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#getWiiBoardLauncher()">getWiiBoardLauncher</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a new WiiBoard-service launcher if there was not any WiiBoardLauncher created yet or a reference to the created object if there was one created already.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../launchers/WiiMoteAccelerationLauncher.html" title="class in launchers">WiiMoteAccelerationLauncher</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#getWiiMoteAccelerationLauncher(int)">getWiiMoteAccelerationLauncher</A></B>(int&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a new WiiMoteAccelerationLauncher from the WiiMote whose label is the one given as parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../launchers/WiiMoteButtonsLauncher.html" title="class in launchers">WiiMoteButtonsLauncher</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#getWiiMoteButtonsLauncher(int)">getWiiMoteButtonsLauncher</A></B>(int&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a new WiiMoteButtonsLauncher from the WiiMote whose label is the one given as parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../launchers/WiiMoteGestureLauncher.html" title="class in launchers">WiiMoteGestureLauncher</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#getWiiMoteGesturesLauncher(int)">getWiiMoteGesturesLauncher</A></B>(int&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a new WiiMoteGestureLauncher from the WiiMote whose label is the one given as parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../launchers/WiiMoteIRGlanceLauncher.html" title="class in launchers">WiiMoteIRGlanceLauncher</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#getWiiMoteIRGlanceLauncher(int)">getWiiMoteIRGlanceLauncher</A></B>(int&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a new WiiMoteIRGlanceLauncher from the WiiMote whose label is the one given as parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../launchers/WiiMoteIRLauncher.html" title="class in launchers">WiiMoteIRLauncher</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#getWiiMoteIRLauncher(int)">getWiiMoteIRLauncher</A></B>(int&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a new WiiMoteIRLauncher from the WiiMote whose label is the one given as parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../launchers/WiiMoteRotationLauncher.html" title="class in launchers">WiiMoteRotationLauncher</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#getWiiMoteRotationLauncher(int)">getWiiMoteRotationLauncher</A></B>(int&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a new WiiMoteRotationLauncher from the WiiMote whose label is the one given as parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#setNunchukDisabled(int)">setNunchukDisabled</A></B>(int&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Disconnects the Nunchuk from the WiiMote whose label is the one given as a parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#setNunchukEnabled(int)">setNunchukEnabled</A></B>(int&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Connects the Nunchuk to the WiiMote whose label is the one given as a parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#setWiiMotionPlusDisabled(int)">setWiiMotionPlusDisabled</A></B>(int&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Disconnects the WiiMotionPlus from the WiiMote whose label is the one given as a parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#setWiiMotionPlusEnabled(int)">setWiiMotionPlusEnabled</A></B>(int&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Connects the WiiMotionPlus to the WiiMote whose label is the one given as a parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../control/DeviceManager.html#wiiBoardDiscovered(edu.unsw.cse.wiiboard.WiiBoard)">wiiBoardDiscovered</A></B>(edu.unsw.cse.wiiboard.WiiBoard&nbsp;wb)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Notifies all waiting threads of this class when a WiiBoard is discovered.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="dm"><!-- --></A><H3>
dm</H3>
<PRE>
private static <A HREF="../control/DeviceManager.html" title="class in control">DeviceManager</A> <B>dm</B></PRE>
<DL>
<DD>This object is the only object that can exist of this class. This object have to be the one used to get the service launchers.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="noninManager"><!-- --></A><H3>
noninManager</H3>
<PRE>
NoninPackage.NoninManager <B>noninManager</B></PRE>
<DL>
<DD>This object is the manager of the Nonin. It is the one which will do the Nonin connections and disconnections.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="noninCounter"><!-- --></A><H3>
noninCounter</H3>
<PRE>
int <B>noninCounter</B></PRE>
<DL>
<DD>This field counts the number of Nonins that have been connected. Due to the way in which this library has been developed, its value can only be 0 or 1.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="wbd"><!-- --></A><H3>
wbd</H3>
<PRE>
edu.unsw.cse.wiiboard.WiiBoardDiscoverer <B>wbd</B></PRE>
<DL>
<DD>This field represents the discoverer of the WiiBoard.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="wiiBoard"><!-- --></A><H3>
wiiBoard</H3>
<PRE>
edu.unsw.cse.wiiboard.WiiBoard <B>wiiBoard</B></PRE>
<DL>
<DD>This field represents the WiiBoard itself.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="wiiBoardCounter"><!-- --></A><H3>
wiiBoardCounter</H3>
<PRE>
int <B>wiiBoardCounter</B></PRE>
<DL>
<DD>This field counts the number of connected WiiBoards. Due to the way in which this library has been developed, its value can only be 0 or 1.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="wiiMoteCreated"><!-- --></A><H3>
wiiMoteCreated</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Integer.html?is-external=true" title="class or interface in java.lang">Integer</A>,org.wiigee.device.Wiimote&gt; <B>wiiMoteCreated</B></PRE>
<DL>
<DD>This field maps the connected WiiMote objects. The X value represents the label of the WiiMote and the Y value the reference to the WiiMote object.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="wiiMoteCounter"><!-- --></A><H3>
wiiMoteCounter</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Integer.html?is-external=true" title="class or interface in java.lang">Integer</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Integer.html?is-external=true" title="class or interface in java.lang">Integer</A>&gt; <B>wiiMoteCounter</B></PRE>
<DL>
<DD>This field maps the number of connected WiiMote. The X value represents the label of the WiiMote and the Y value the number of connected WiiMotes.
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="DeviceManager()"><!-- --></A><H3>
DeviceManager</H3>
<PRE>
public <B>DeviceManager</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getDeviceManager()"><!-- --></A><H3>
getDeviceManager</H3>
<PRE>
public static <A HREF="../control/DeviceManager.html" title="class in control">DeviceManager</A> <B>getDeviceManager</B>()</PRE>
<DL>
<DD>Returns a new instance of DeviceManager if it did not exist or the instance that was created if there was a created instance already.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>DeviceManager</DL>
</DD>
</DL>
<HR>

<A NAME="getNoninLauncher()"><!-- --></A><H3>
getNoninLauncher</H3>
<PRE>
public <A HREF="../launchers/NoninLauncher.html" title="class in launchers">NoninLauncher</A> <B>getNoninLauncher</B>()
                               throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD>Returns a new Nonin-service launcher if there was not any NoninLauncher created yet or a reference to the created object if there was one created already.
 It throws an exception if the Nonin was not found when the DiscoveryListener probed the BlueTooth area.
 See the javadocNoninDiscoveryListener and NoninManager (both of them belongs to the NoninLibrary library)
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The reference to the NoninLauncher object.
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getWiiBoardLauncher()"><!-- --></A><H3>
getWiiBoardLauncher</H3>
<PRE>
public <A HREF="../launchers/WiiBoardLauncher.html" title="class in launchers">WiiBoardLauncher</A> <B>getWiiBoardLauncher</B>()</PRE>
<DL>
<DD>Returns a new WiiBoard-service launcher if there was not any WiiBoardLauncher created yet or a reference to the created object if there was one created already.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The reference to the WiiBoardLauncher object.</DL>
</DD>
</DL>
<HR>

<A NAME="getWiiMoteAccelerationLauncher(int)"><!-- --></A><H3>
getWiiMoteAccelerationLauncher</H3>
<PRE>
public <A HREF="../launchers/WiiMoteAccelerationLauncher.html" title="class in launchers">WiiMoteAccelerationLauncher</A> <B>getWiiMoteAccelerationLauncher</B>(int&nbsp;label)</PRE>
<DL>
<DD>Returns a new WiiMoteAccelerationLauncher from the WiiMote whose label is the one given as parameter. 
 If there is not any WiiMote with the given label yet, a new WiiMote object is created.
 The connected WiiMote will turn on one LED, the one corresponding to the label (starting from left to right). 
 If the label value is higher than four, a module 4 operation will be applied so that one LED will be lighted up too.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>label</CODE> - The label that identifies one WiiMote from another.
<DT><B>Returns:</B><DD>The reference to the WiiMoteAccelerationLauncher object.</DL>
</DD>
</DL>
<HR>

<A NAME="getWiiMoteButtonsLauncher(int)"><!-- --></A><H3>
getWiiMoteButtonsLauncher</H3>
<PRE>
public <A HREF="../launchers/WiiMoteButtonsLauncher.html" title="class in launchers">WiiMoteButtonsLauncher</A> <B>getWiiMoteButtonsLauncher</B>(int&nbsp;label)</PRE>
<DL>
<DD>Returns a new WiiMoteButtonsLauncher from the WiiMote whose label is the one given as parameter. 
 If there is not any WiiMote with the given label yet, a new WiiMote object is created.
 The connected WiiMote will turn on one LED, the one corresponding to the label (starting from left to right). 
 If the label value is higher than four, a module 4 operation will be applied so that one LED will be lighted up too.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>label</CODE> - The label that identifies one WiiMote from another.
<DT><B>Returns:</B><DD>The reference to the WiiMoteButtonsLauncher object.</DL>
</DD>
</DL>
<HR>

<A NAME="getWiiMoteGesturesLauncher(int)"><!-- --></A><H3>
getWiiMoteGesturesLauncher</H3>
<PRE>
public <A HREF="../launchers/WiiMoteGestureLauncher.html" title="class in launchers">WiiMoteGestureLauncher</A> <B>getWiiMoteGesturesLauncher</B>(int&nbsp;label)</PRE>
<DL>
<DD>Returns a new WiiMoteGestureLauncher from the WiiMote whose label is the one given as parameter. 
 If there is not any WiiMote with the given label yet, a new WiiMote object is created.
 The connected WiiMote will turn on one LED, the one corresponding to the label (starting from left to right).
 If the label value is higher than four, a module 4 operation will be applied so that one LED will be lighted up too.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>label</CODE> - The label that identifies one WiiMote from another.
<DT><B>Returns:</B><DD>The reference to the WiiMoteButtonsLauncher object.</DL>
</DD>
</DL>
<HR>

<A NAME="getWiiMoteIRGlanceLauncher(int)"><!-- --></A><H3>
getWiiMoteIRGlanceLauncher</H3>
<PRE>
public <A HREF="../launchers/WiiMoteIRGlanceLauncher.html" title="class in launchers">WiiMoteIRGlanceLauncher</A> <B>getWiiMoteIRGlanceLauncher</B>(int&nbsp;label)</PRE>
<DL>
<DD>Returns a new WiiMoteIRGlanceLauncher from the WiiMote whose label is the one given as parameter. 
 If there is not any WiiMote with the given label yet, a new WiiMote object is created.
 The connected WiiMote will turn on one LED, the one corresponding to the label (starting from left to right).
 If the label value is higher than four, a module 4 operation will be applied so that one LED will be lighted up too.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>label</CODE> - The label that identifies one WiiMote from another.
<DT><B>Returns:</B><DD>The reference to the WiiMoteButtonsLauncher object.</DL>
</DD>
</DL>
<HR>

<A NAME="getWiiMoteIRLauncher(int)"><!-- --></A><H3>
getWiiMoteIRLauncher</H3>
<PRE>
public <A HREF="../launchers/WiiMoteIRLauncher.html" title="class in launchers">WiiMoteIRLauncher</A> <B>getWiiMoteIRLauncher</B>(int&nbsp;label)</PRE>
<DL>
<DD>Returns a new WiiMoteIRLauncher from the WiiMote whose label is the one given as parameter. 
 If there is not any WiiMote with the given label yet, a new WiiMote object is created.
 The connected WiiMote will turn on one LED, the one corresponding to the label (starting from left to right).
 If the label value is higher than four, a module 4 operation will be applied so that one LED will be lighted up too.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>label</CODE> - The label that identifies one WiiMote from another.
<DT><B>Returns:</B><DD>The reference to the WiiMoteIRLauncher object.</DL>
</DD>
</DL>
<HR>

<A NAME="dropNonin()"><!-- --></A><H3>
dropNonin</H3>
<PRE>
public void <B>dropNonin</B>()</PRE>
<DL>
<DD>You have to call this function when you do not need one service of the Nonin any longer.
 This function subtracts one from the noninCounter. If noninCounter becomes 0, the Nonin will be disconnected.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="dropWiiBoard()"><!-- --></A><H3>
dropWiiBoard</H3>
<PRE>
public void <B>dropWiiBoard</B>()</PRE>
<DL>
<DD>You have to call this function when you do not need one service of the WiiBoard any longer.
 This function subtracts one from the wiiBoardCounter. If noninCounter becomes 0, the WiiBoard will be disconnected.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="dropWiiMote(int)"><!-- --></A><H3>
dropWiiMote</H3>
<PRE>
public void <B>dropWiiMote</B>(int&nbsp;label)</PRE>
<DL>
<DD>You have to call this function when you do not need one service of the WiiMote any longer.
 This function subtracts one from the value mapped by the label given as parameter in wiiMoteCounter map. If that value becomes 0, the WiiMote mapped by label in the wiiMoteCreated map will be disconnected.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>label</CODE> - The label that identifies one WiiMote from another.</DL>
</DD>
</DL>
<HR>

<A NAME="wiiBoardDiscovered(edu.unsw.cse.wiiboard.WiiBoard)"><!-- --></A><H3>
wiiBoardDiscovered</H3>
<PRE>
public void <B>wiiBoardDiscovered</B>(edu.unsw.cse.wiiboard.WiiBoard&nbsp;wb)</PRE>
<DL>
<DD>Notifies all waiting threads of this class when a WiiBoard is discovered.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>wiiBoardDiscovered</CODE> in interface <CODE>edu.unsw.cse.wiiboard.WiiBoardDiscoveryListener</CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>wb</CODE> - The discovered WiiBoard.</DL>
</DD>
</DL>
<HR>

<A NAME="setNunchukEnabled(int)"><!-- --></A><H3>
setNunchukEnabled</H3>
<PRE>
public void <B>setNunchukEnabled</B>(int&nbsp;label)</PRE>
<DL>
<DD>Connects the Nunchuk to the WiiMote whose label is the one given as a parameter.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>label</CODE> - The label that identifies one WiiMote from another.</DL>
</DD>
</DL>
<HR>

<A NAME="setNunchukDisabled(int)"><!-- --></A><H3>
setNunchukDisabled</H3>
<PRE>
public void <B>setNunchukDisabled</B>(int&nbsp;label)</PRE>
<DL>
<DD>Disconnects the Nunchuk from the WiiMote whose label is the one given as a parameter.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>label</CODE> - The label that identifies one WiiMote from another.</DL>
</DD>
</DL>
<HR>

<A NAME="setWiiMotionPlusEnabled(int)"><!-- --></A><H3>
setWiiMotionPlusEnabled</H3>
<PRE>
public void <B>setWiiMotionPlusEnabled</B>(int&nbsp;label)</PRE>
<DL>
<DD>Connects the WiiMotionPlus to the WiiMote whose label is the one given as a parameter.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>label</CODE> - The label that identifies one WiiMote from another.</DL>
</DD>
</DL>
<HR>

<A NAME="setWiiMotionPlusDisabled(int)"><!-- --></A><H3>
setWiiMotionPlusDisabled</H3>
<PRE>
public void <B>setWiiMotionPlusDisabled</B>(int&nbsp;label)</PRE>
<DL>
<DD>Disconnects the WiiMotionPlus from the WiiMote whose label is the one given as a parameter.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>label</CODE> - The label that identifies one WiiMote from another.</DL>
</DD>
</DL>
<HR>

<A NAME="getNunchukAnalogStickLauncher(int)"><!-- --></A><H3>
getNunchukAnalogStickLauncher</H3>
<PRE>
public <A HREF="../launchers/NunchukAnalogStickLauncher.html" title="class in launchers">NunchukAnalogStickLauncher</A> <B>getNunchukAnalogStickLauncher</B>(int&nbsp;label)</PRE>
<DL>
<DD>Returns a new NunchukAnalogStickLauncher from the WiiMote whose label is the one given as parameter. 
 If there is not any WiiMote with the given label yet, a new WiiMote object is created.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>label</CODE> - The label that identifies one WiiMote from another.
<DT><B>Returns:</B><DD>NunchukAnalogStickLaucher</DL>
</DD>
</DL>
<HR>

<A NAME="getNunchukAccelerationLauncher(int)"><!-- --></A><H3>
getNunchukAccelerationLauncher</H3>
<PRE>
public <A HREF="../launchers/NunchukAccelerationLauncher.html" title="class in launchers">NunchukAccelerationLauncher</A> <B>getNunchukAccelerationLauncher</B>(int&nbsp;label)</PRE>
<DL>
<DD>Returns a new NunchukAccelerationLauncher from the WiiMote whose label is the one given as parameter. 
 If there is not any WiiMote with the given label yet, a new WiiMote object is created.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>label</CODE> - The label that identifies one WiiMote from another.
<DT><B>Returns:</B><DD>NunchukAccelerationLauncher</DL>
</DD>
</DL>
<HR>

<A NAME="getNunchukButtonsLauncher(int)"><!-- --></A><H3>
getNunchukButtonsLauncher</H3>
<PRE>
public <A HREF="../launchers/NunchukButtonsLauncher.html" title="class in launchers">NunchukButtonsLauncher</A> <B>getNunchukButtonsLauncher</B>(int&nbsp;label)</PRE>
<DL>
<DD>Returns a new NunchukButtonsLauncher from the WiiMote whose label is the one given as parameter. 
 If there is not any WiiMote with the given label yet, a new WiiMote object is created.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>label</CODE> - The label that identifies one WiiMote from another.
<DT><B>Returns:</B><DD>NunchukButtonsLauncher</DL>
</DD>
</DL>
<HR>

<A NAME="getWiiMoteRotationLauncher(int)"><!-- --></A><H3>
getWiiMoteRotationLauncher</H3>
<PRE>
public <A HREF="../launchers/WiiMoteRotationLauncher.html" title="class in launchers">WiiMoteRotationLauncher</A> <B>getWiiMoteRotationLauncher</B>(int&nbsp;label)</PRE>
<DL>
<DD>Returns a new WiiMoteRotationLauncher from the WiiMote whose label is the one given as parameter. 
 If there is not any WiiMote with the given label yet, a new WiiMote object is created.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>label</CODE> - The label that identifies one WiiMote from another.
<DT><B>Returns:</B><DD>WiiMoteRotationLauncher</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/DeviceManager.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../control/IEventCommModule.html" title="interface in control"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?control/DeviceManager.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="DeviceManager.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
