package launchers;

import iservices.*;

import java.util.Iterator;

import org.wiigee.device.Wiimote;
import org.wiigee.event.GestureEvent;
import org.wiigee.event.GestureListener;

import services.*;

import control.DeviceManager;
import control.IListenerCommModule;
import control.LauncherWrapper;
public class WiiMoteGestureLauncher extends LauncherWrapper implements GestureListener{

	/**
	 * This field is the reference to the object wiiMote of DeviceManager class.
	 */
	private Wiimote wiiMote;
	
	/**
	 * Returns the object wiiMote.
	 * @return noninManager The object wiiMote.
	 */
	public Wiimote getWiiMote(){
		return wiiMote;
	}
	
	/**
	 * Adds a listener to the list of listeners of the superclass LauncherWrapper.
	 * @param l The listener that have to be added.
	 */
	public void addListener (IWiiMoteGestureService l){	
		super.addListener(l);
	}
	
	/**
	 * Calls to the superclass LauncherWrapper function dropService and drops one WiiMoted labeled with the given parameter from the DeviceManager.
	 * @param label The label of the WiiMote whose service is going to be dropped.
	 */
	public void dropService(int label){
		super.dropService();
		DeviceManager.getDeviceManager().dropWiiMote(label);	
	}
	
	/**
     * Links this class with the DeviceManager by adding itself as listener.
	 * @param wm The Wiimote object that must be now the field noninManager of this class.
	 */
	public WiiMoteGestureLauncher(Wiimote wm) {
		wiiMote= wm; 
		wm.addGestureListener(this);
	}

	//Specific functions
	/**
	 * Throws the given GestureEvent to all listeners in the listenerList as a WiiMoteServiceGestureEvent.
	 * @param event The GestureEvent.
	 */
	public void gestureReceived(GestureEvent event) {
		WiiMoteServiceGestureEvent se = new WiiMoteServiceGestureEvent(event);	
		Iterator<IListenerCommModule> it = listenersList.iterator();
		while(it.hasNext()){
			IWiiMoteGestureService l = (IWiiMoteGestureService)it.next();
			l.gestureReceived(se);		
		}
		
	}

	

}
