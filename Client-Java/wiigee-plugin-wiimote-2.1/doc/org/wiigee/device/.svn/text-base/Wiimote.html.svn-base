<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_20) on Mon Jul 12 12:01:14 CEST 2010 -->
<TITLE>
Wiimote
</TITLE>

<META NAME="date" CONTENT="2010-07-12">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Wiimote";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Wiimote.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/wiigee/device/Nunchuk.html" title="class in org.wiigee.device"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../org/wiigee/device/WiiMotionPlus.html" title="class in org.wiigee.device"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/wiigee/device/Wiimote.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Wiimote.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.wiigee.device</FONT>
<BR>
Class Wiimote</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by ">org.wiigee.device.Device
      <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>org.wiigee.device.Wiimote</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>Wiimote</B><DT>extends org.wiigee.device.Device</DL>
</PRE>

<P>
This class represents the basic functions of the wiimote.
 If you want your wiimote to e.g. vibrate you'll do this here.
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>Benjamin Poppinga, upgraded by Santiago Hors Fraile</DD>
</DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#btaddress">btaddress</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Represents the BlueTooth address as string representation</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#BUTTON_1">BUTTON_1</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#BUTTON_2">BUTTON_2</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#BUTTON_A">BUTTON_A</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#BUTTON_B">BUTTON_B</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#BUTTON_DOWN">BUTTON_DOWN</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#BUTTON_HOME">BUTTON_HOME</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#BUTTON_LEFT">BUTTON_LEFT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#BUTTON_MINUS">BUTTON_MINUS</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#BUTTON_PLUS">BUTTON_PLUS</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#BUTTON_RIGHT">BUTTON_RIGHT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#BUTTON_UP">BUTTON_UP</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#calibrated">calibrated</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Represents the calibration state of the WiiMote.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#CMD_SET_REPORT">CMD_SET_REPORT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;javax.bluetooth.L2CAPConnection</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#controlCon">controlCon</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Represents the control connection that send commands to the wiimote.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#infraredEnabled">infraredEnabled</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Represents the IR state of the WiimMote.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.util.Vector&lt;<A HREF="../../../org/wiigee/event/InfraredListener.html" title="interface in org.wiigee.event">InfraredListener</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#infraredlistener">infraredlistener</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Stores the IR listeners that receive generated events.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#IR_MODE_EXTENDED">IR_MODE_EXTENDED</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#IR_MODE_STANDARD">IR_MODE_STANDARD</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>(package private) &nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#ledencoding">ledencoding</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Represents the LED encoded as byte.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;javax.swing.event.EventListenerList</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#listenerList">listenerList</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#MODE_BUTTONS">MODE_BUTTONS</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#MODE_BUTTONS_ACCELERATION">MODE_BUTTONS_ACCELERATION</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#MODE_BUTTONS_ACCELERATION_INFRARED">MODE_BUTTONS_ACCELERATION_INFRARED</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;<A HREF="../../../org/wiigee/device/Nunchuk.html" title="class in org.wiigee.device">Nunchuk</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#nunchuk">nunchuk</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#nunchukbuttonstate">nunchukbuttonstate</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;javax.bluetooth.L2CAPConnection</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#receiveCon">receiveCon</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Represents the reception connection that receive answers from the wiimote.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.util.Vector&lt;org.wiigee.filter.Filter&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#rotfilters">rotfilters</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Represents the filters that can filter the data stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#TYPE_NUNCHUK">TYPE_NUNCHUK</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#TYPE_WIIMOTIONPLUS">TYPE_WIIMOTIONPLUS</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#vibrating">vibrating</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Represents the vibration state of the WiiMote.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;<A HREF="../../../org/wiigee/device/WiiMotionPlus.html" title="class in org.wiigee.device">WiiMotionPlus</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#wiimotionplus">wiimotionplus</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#wiiMotionPlusCalibrated">wiiMotionPlusCalibrated</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#wiiMotionPlusEnabled">wiiMotionPlusEnabled</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Represents the WiiMotionPlus connected event.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#wiiNunchukEnabled">wiiNunchukEnabled</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;<A HREF="../../../org/wiigee/control/WiimoteStreamer.html" title="class in org.wiigee.control">WiimoteStreamer</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#wms">wms</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Represents the streamer that controls the flow of bytes arriving from the WiiMote.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.wiigee.device.Device"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.wiigee.device.Device</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>accelerationEnabled, accelerationlistener, accfilters, buttonlistener, closegesturebutton, MOTION, processingunit, recognitionbutton, trainbutton</CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#Wiimote(java.lang.String, boolean, boolean)">Wiimote</A></B>(java.lang.String&nbsp;btaddress,
        boolean&nbsp;autofiltering,
        boolean&nbsp;autoconnect)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new wiimote-device with a specific bluetooth mac-adress.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#addAnalogStickListener(org.wiigee.event.AnalogStickListener)">addAnalogStickListener</A></B>(<A HREF="../../../org/wiigee/event/AnalogStickListener.html" title="interface in org.wiigee.event">AnalogStickListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the AnalogStickListener given by parameter to the listenerList.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#addDataListener(org.wiigee.event.DataListener)">addDataListener</A></B>(<A HREF="../../../org/wiigee/event/DataListener.html" title="interface in org.wiigee.event">DataListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the DataListener given by parameter to the listenerList.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#addExtensionListener(org.wiigee.event.ExtensionListener)">addExtensionListener</A></B>(<A HREF="../../../org/wiigee/event/ExtensionListener.html" title="interface in org.wiigee.event">ExtensionListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the ExtensionListener given by parameter to the listenerList.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#addInfraredListener(org.wiigee.event.InfraredListener)">addInfraredListener</A></B>(<A HREF="../../../org/wiigee/event/InfraredListener.html" title="interface in org.wiigee.event">InfraredListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The added Listener will be notified about detected infrated
 events.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#addNunchukAccelerometerListener(org.wiigee.event.AccelerometerListener)">addNunchukAccelerometerListener</A></B>(<A HREF="../../../org/wiigee/event/AccelerometerListener.html" title="interface in org.wiigee.event">AccelerometerListener</A>&lt;<A HREF="../../../org/wiigee/device/Nunchuk.html" title="class in org.wiigee.device">Nunchuk</A>&gt;&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the NunchukAccelerometerListener given by parameter to the listenerList.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#addNunchukButtonListener(org.wiigee.event.NunchukButtonListener)">addNunchukButtonListener</A></B>(<A HREF="../../../org/wiigee/event/NunchukButtonListener.html" title="interface in org.wiigee.event">NunchukButtonListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the NunchukButtonListener given by parameter to the listenerList.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#addWiiMotionPlusRotationListener(org.wiigee.event.RotationListener)">addWiiMotionPlusRotationListener</A></B>(<A HREF="../../../org/wiigee/event/RotationListener.html" title="interface in org.wiigee.event">RotationListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the RotationListener given by parameter to the listenerList.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#anyExtensionEnabled()">anyExtensionEnabled</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports if there is any extension (WiiMotionPlus or Nunchuk) enabled to the calling WiiMote.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#calibrateAccelerometer()">calibrateAccelerometer</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initializes the calibration of the accerlerometer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#connect()">connect</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates the two needed connections to send and receive commands
 to and from the wiimote-device.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#connectNunchuk()">connectNunchuk</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sends the command to connect the Nunchuk.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#connectWiiMotionPlus()">connectWiiMotionPlus</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sends the command to connect the WiiMotionPlus.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#disconnect()">disconnect</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Disconnects the wiimote and closes the two connections.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#disconnectNunchuk()">disconnectNunchuk</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sends the command to disconnect the Nunchuk.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#disconnectWiiMotionPlus()">disconnectWiiMotionPlus</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sends the command to disconnect the WiiMotionPlus.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#fireExtensionConnectedEvent(int)">fireExtensionConnectedEvent</A></B>(int&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Throws a disconnection event to all extensions listeners referring to the Nunchuk or WiiMote depending on the given parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#fireExtensionDisconnectedEvent(int)">fireExtensionDisconnectedEvent</A></B>(int&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Throws a connection event to all extensions listeners referring to the Nunchuk or WiiMote depending on the given parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#fireInfraredEvent(int[][], int[])">fireInfraredEvent</A></B>(int[][]&nbsp;coordinates,
                  int[]&nbsp;size)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fires a infrared event, containig coordinate pairs (x,y) and a
 size of the detected IR spot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.event.EventListenerList</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#getListenerList()">getListenerList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the field that stores the list of listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../org/wiigee/device/Nunchuk.html" title="class in org.wiigee.device">Nunchuk</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#getNunchuk()">getNunchuk</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the Nunchuk of the calling WiiMote.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#getNunchukbuttonstate()">getNunchukbuttonstate</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the button state of the Nunchuk.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.bluetooth.L2CAPConnection</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#getReceiveConnection()">getReceiveConnection</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../org/wiigee/device/WiiMotionPlus.html" title="class in org.wiigee.device">WiiMotionPlus</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#getWiiMotionPlus()">getWiiMotionPlus</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the WiiMotionPlus of the calling WiiMote.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#isWiiMotionPlusCalibrated()">isWiiMotionPlusCalibrated</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the calibration state of the WiiMotionPlus.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#isWiiMotionPlusEnabled()">isWiiMotionPlusEnabled</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports if there is any WiiMotionPlus enabled to the calling WiiMote.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#isWiiNunchukEnabled()">isWiiNunchukEnabled</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports if there is any Nuncbuk enabled to the calling WiiMote.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#readEEPROM(byte[], byte[])">readEEPROM</A></B>(byte[]&nbsp;offset,
           byte[]&nbsp;size)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads data out of the EEPROM of the wiimote.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#readRegister(byte[], byte[])">readRegister</A></B>(byte[]&nbsp;offset,
             byte[]&nbsp;size)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Makes the Wiimote respond the data of an register.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#removeAnalogStickListener(org.wiigee.event.AnalogStickListener)">removeAnalogStickListener</A></B>(<A HREF="../../../org/wiigee/event/AnalogStickListener.html" title="interface in org.wiigee.event">AnalogStickListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the AnalogStickListener given by parameter to the listenerList.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#removeChar(java.lang.String, char)">removeChar</A></B>(java.lang.String&nbsp;s,
           char&nbsp;c)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes all chars that are the same than the one given by parameter from a string given by parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#removeDataListener(org.wiigee.event.DataListener)">removeDataListener</A></B>(<A HREF="../../../org/wiigee/event/DataListener.html" title="interface in org.wiigee.event">DataListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the DataListener given by parameter to the listenerList.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#removeExtensionListener(org.wiigee.event.ExtensionListener)">removeExtensionListener</A></B>(<A HREF="../../../org/wiigee/event/ExtensionListener.html" title="interface in org.wiigee.event">ExtensionListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the ExtensionListener given by parameter to the listenerList.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#removeNunchukAccelerometerListener(org.wiigee.event.AccelerometerListener)">removeNunchukAccelerometerListener</A></B>(<A HREF="../../../org/wiigee/event/AccelerometerListener.html" title="interface in org.wiigee.event">AccelerometerListener</A>&lt;<A HREF="../../../org/wiigee/device/Nunchuk.html" title="class in org.wiigee.device">Nunchuk</A>&gt;&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the NunchukAccelerometerListener given by parameter to the listenerList.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#removeNunchukButtonListener(org.wiigee.event.NunchukButtonListener)">removeNunchukButtonListener</A></B>(<A HREF="../../../org/wiigee/event/NunchukButtonListener.html" title="interface in org.wiigee.event">NunchukButtonListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the NunchukButtonListener given by parameter to the listenerList.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#removeWiiMotionPlusAccelerometerListener(org.wiigee.event.AccelerometerListener)">removeWiiMotionPlusAccelerometerListener</A></B>(<A HREF="../../../org/wiigee/event/AccelerometerListener.html" title="interface in org.wiigee.event">AccelerometerListener</A>&lt;<A HREF="../../../org/wiigee/device/WiiMotionPlus.html" title="class in org.wiigee.device">WiiMotionPlus</A>&gt;&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the WiiMotionPlusListener given by parameter to the listenerList.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#sendRaw(byte[])">sendRaw</A></B>(byte[]&nbsp;raw)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sends pure hexdata to the wiimote.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#setAccelerationEnabled(boolean)">setAccelerationEnabled</A></B>(boolean&nbsp;enabled)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Activates the acceleration sensor.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#setBoardEnabled(boolean)">setBoardEnabled</A></B>(boolean&nbsp;enabled)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#setInfraredCameraEnabled(boolean)">setInfraredCameraEnabled</A></B>(boolean&nbsp;enabled)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enables or disables the infrared camera of the wiimote with
 the default values.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#setInfraredCameraEnabled(boolean, byte)">setInfraredCameraEnabled</A></B>(boolean&nbsp;enabled,
                         byte&nbsp;infraredMode)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enables the infrared camera in front of the wiimote to track
 IR sources in the field of view of the camera.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#setLED(int)">setLED</A></B>(int&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enables one or more LEDs, where the value could be between 0 and 8.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#setNunchukbuttonstate(int)">setNunchukbuttonstate</A></B>(int&nbsp;nunchukbuttonstate)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the button state of the Nunchuk with the given parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#setNunchukEnabled(boolean)">setNunchukEnabled</A></B>(boolean&nbsp;enabled)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enables or disables the Nunchuk extension.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#setWiiMotionPlusCalibrated(boolean)">setWiiMotionPlusCalibrated</A></B>(boolean&nbsp;b)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the calibration state of the WiiMotionPlus with the given parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#setWiiMotionPlusEnabled(boolean)">setWiiMotionPlusEnabled</A></B>(boolean&nbsp;enabled)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enables or disables the WiiMotionPlus extension.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#streamData(boolean)">streamData</A></B>(boolean&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method makes the Wiimote-Class reacting to incoming data.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#updateReportChannel()">updateReportChannel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Updates the report channel according to the choosen
 functions that are enabled (acceleration, irda, ...).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#vibrateForTime(long)">vibrateForTime</A></B>(long&nbsp;milliseconds)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;With this method you gain access over the vibrate function of
 the wiimote.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/wiigee/device/Wiimote.html#writeRegister(byte[], byte[])">writeRegister</A></B>(byte[]&nbsp;offset,
              byte[]&nbsp;data)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Write data to a register inside of the wiimote.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.wiigee.device.Device"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.wiigee.device.Device</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>addAccelerationFilter, addAccelerationListener, addButtonListener, addGestureListener, fireAccelerationEvent, fireButtonPressedEvent, fireButtonReleasedEvent, fireMotionStartEvent, fireMotionStopEvent, getCloseGestureButton, getProcessingUnit, getRecognitionButton, getTrainButton, loadGesture, resetAccelerationFilters, saveGesture, setCloseGestureButton, setRecognitionButton, setTrainButton</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="BUTTON_2"><!-- --></A><H3>
BUTTON_2</H3>
<PRE>
public static final int <B>BUTTON_2</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.BUTTON_2">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="BUTTON_1"><!-- --></A><H3>
BUTTON_1</H3>
<PRE>
public static final int <B>BUTTON_1</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.BUTTON_1">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="BUTTON_B"><!-- --></A><H3>
BUTTON_B</H3>
<PRE>
public static final int <B>BUTTON_B</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.BUTTON_B">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="BUTTON_A"><!-- --></A><H3>
BUTTON_A</H3>
<PRE>
public static final int <B>BUTTON_A</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.BUTTON_A">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="BUTTON_MINUS"><!-- --></A><H3>
BUTTON_MINUS</H3>
<PRE>
public static final int <B>BUTTON_MINUS</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.BUTTON_MINUS">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="BUTTON_HOME"><!-- --></A><H3>
BUTTON_HOME</H3>
<PRE>
public static final int <B>BUTTON_HOME</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.BUTTON_HOME">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="BUTTON_LEFT"><!-- --></A><H3>
BUTTON_LEFT</H3>
<PRE>
public static final int <B>BUTTON_LEFT</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.BUTTON_LEFT">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="BUTTON_RIGHT"><!-- --></A><H3>
BUTTON_RIGHT</H3>
<PRE>
public static final int <B>BUTTON_RIGHT</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.BUTTON_RIGHT">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="BUTTON_DOWN"><!-- --></A><H3>
BUTTON_DOWN</H3>
<PRE>
public static final int <B>BUTTON_DOWN</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.BUTTON_DOWN">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="BUTTON_UP"><!-- --></A><H3>
BUTTON_UP</H3>
<PRE>
public static final int <B>BUTTON_UP</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.BUTTON_UP">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="BUTTON_PLUS"><!-- --></A><H3>
BUTTON_PLUS</H3>
<PRE>
public static final int <B>BUTTON_PLUS</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.BUTTON_PLUS">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="CMD_SET_REPORT"><!-- --></A><H3>
CMD_SET_REPORT</H3>
<PRE>
public static final byte <B>CMD_SET_REPORT</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.CMD_SET_REPORT">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="IR_MODE_STANDARD"><!-- --></A><H3>
IR_MODE_STANDARD</H3>
<PRE>
public static final byte <B>IR_MODE_STANDARD</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.IR_MODE_STANDARD">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="IR_MODE_EXTENDED"><!-- --></A><H3>
IR_MODE_EXTENDED</H3>
<PRE>
public static final byte <B>IR_MODE_EXTENDED</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.IR_MODE_EXTENDED">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="MODE_BUTTONS"><!-- --></A><H3>
MODE_BUTTONS</H3>
<PRE>
public static final byte <B>MODE_BUTTONS</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.MODE_BUTTONS">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="MODE_BUTTONS_ACCELERATION"><!-- --></A><H3>
MODE_BUTTONS_ACCELERATION</H3>
<PRE>
public static final byte <B>MODE_BUTTONS_ACCELERATION</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.MODE_BUTTONS_ACCELERATION">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="MODE_BUTTONS_ACCELERATION_INFRARED"><!-- --></A><H3>
MODE_BUTTONS_ACCELERATION_INFRARED</H3>
<PRE>
public static final byte <B>MODE_BUTTONS_ACCELERATION_INFRARED</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.MODE_BUTTONS_ACCELERATION_INFRARED">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="TYPE_NUNCHUK"><!-- --></A><H3>
TYPE_NUNCHUK</H3>
<PRE>
public static final int <B>TYPE_NUNCHUK</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.TYPE_NUNCHUK">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="TYPE_WIIMOTIONPLUS"><!-- --></A><H3>
TYPE_WIIMOTIONPLUS</H3>
<PRE>
public static final int <B>TYPE_WIIMOTIONPLUS</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.wiigee.device.Wiimote.TYPE_WIIMOTIONPLUS">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="btaddress"><!-- --></A><H3>
btaddress</H3>
<PRE>
private java.lang.String <B>btaddress</B></PRE>
<DL>
<DD>Represents the BlueTooth address as string representation
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="ledencoding"><!-- --></A><H3>
ledencoding</H3>
<PRE>
byte <B>ledencoding</B></PRE>
<DL>
<DD>Represents the LED encoded as byte.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="rotfilters"><!-- --></A><H3>
rotfilters</H3>
<PRE>
protected java.util.Vector&lt;org.wiigee.filter.Filter&gt; <B>rotfilters</B></PRE>
<DL>
<DD>Represents the filters that can filter the data stream.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="controlCon"><!-- --></A><H3>
controlCon</H3>
<PRE>
private javax.bluetooth.L2CAPConnection <B>controlCon</B></PRE>
<DL>
<DD>Represents the control connection that send commands to the wiimote.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="receiveCon"><!-- --></A><H3>
receiveCon</H3>
<PRE>
private javax.bluetooth.L2CAPConnection <B>receiveCon</B></PRE>
<DL>
<DD>Represents the reception connection that receive answers from the wiimote.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="infraredlistener"><!-- --></A><H3>
infraredlistener</H3>
<PRE>
protected java.util.Vector&lt;<A HREF="../../../org/wiigee/event/InfraredListener.html" title="interface in org.wiigee.event">InfraredListener</A>&gt; <B>infraredlistener</B></PRE>
<DL>
<DD>Stores the IR listeners that receive generated events.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="vibrating"><!-- --></A><H3>
vibrating</H3>
<PRE>
private boolean <B>vibrating</B></PRE>
<DL>
<DD>Represents the vibration state of the WiiMote. True if vibrating, false otherwise.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="calibrated"><!-- --></A><H3>
calibrated</H3>
<PRE>
private boolean <B>calibrated</B></PRE>
<DL>
<DD>Represents the calibration state of the WiiMote. True if calibrated, false otherwise.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="infraredEnabled"><!-- --></A><H3>
infraredEnabled</H3>
<PRE>
private boolean <B>infraredEnabled</B></PRE>
<DL>
<DD>Represents the IR state of the WiimMote. True if enabled, false otherwise.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="wms"><!-- --></A><H3>
wms</H3>
<PRE>
private <A HREF="../../../org/wiigee/control/WiimoteStreamer.html" title="class in org.wiigee.control">WiimoteStreamer</A> <B>wms</B></PRE>
<DL>
<DD>Represents the streamer that controls the flow of bytes arriving from the WiiMote.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="wiiMotionPlusEnabled"><!-- --></A><H3>
wiiMotionPlusEnabled</H3>
<PRE>
private boolean <B>wiiMotionPlusEnabled</B></PRE>
<DL>
<DD>Represents the WiiMotionPlus connected event. True if connected, false otherwise.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="nunchuk"><!-- --></A><H3>
nunchuk</H3>
<PRE>
private <A HREF="../../../org/wiigee/device/Nunchuk.html" title="class in org.wiigee.device">Nunchuk</A> <B>nunchuk</B></PRE>
<DL>
<DL>
</DL>
</DL>
<HR>

<A NAME="wiimotionplus"><!-- --></A><H3>
wiimotionplus</H3>
<PRE>
private <A HREF="../../../org/wiigee/device/WiiMotionPlus.html" title="class in org.wiigee.device">WiiMotionPlus</A> <B>wiimotionplus</B></PRE>
<DL>
<DL>
</DL>
</DL>
<HR>

<A NAME="listenerList"><!-- --></A><H3>
listenerList</H3>
<PRE>
private javax.swing.event.EventListenerList <B>listenerList</B></PRE>
<DL>
<DL>
</DL>
</DL>
<HR>

<A NAME="wiiNunchukEnabled"><!-- --></A><H3>
wiiNunchukEnabled</H3>
<PRE>
private boolean <B>wiiNunchukEnabled</B></PRE>
<DL>
<DL>
</DL>
</DL>
<HR>

<A NAME="wiiMotionPlusCalibrated"><!-- --></A><H3>
wiiMotionPlusCalibrated</H3>
<PRE>
private boolean <B>wiiMotionPlusCalibrated</B></PRE>
<DL>
<DL>
</DL>
</DL>
<HR>

<A NAME="nunchukbuttonstate"><!-- --></A><H3>
nunchukbuttonstate</H3>
<PRE>
private int <B>nunchukbuttonstate</B></PRE>
<DL>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="Wiimote(java.lang.String, boolean, boolean)"><!-- --></A><H3>
Wiimote</H3>
<PRE>
public <B>Wiimote</B>(java.lang.String&nbsp;btaddress,
               boolean&nbsp;autofiltering,
               boolean&nbsp;autoconnect)
        throws java.io.IOException</PRE>
<DL>
<DD>Creates a new wiimote-device with a specific bluetooth mac-adress.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>btaddress</CODE> - String representation of the mac-adress e.g. 00191D68B57C.<DD><CODE>autofiltering</CODE> - If set the wiimote would automatically add the IdleStateFilter.<DD><CODE>autoconnect</CODE> - If set the wiimote would automatically be connected.
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="connect()"><!-- --></A><H3>
connect</H3>
<PRE>
public void <B>connect</B>()
             throws java.io.IOException</PRE>
<DL>
<DD>Creates the two needed connections to send and receive commands
 to and from the wiimote-device.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="disconnect()"><!-- --></A><H3>
disconnect</H3>
<PRE>
public void <B>disconnect</B>()</PRE>
<DL>
<DD>Disconnects the wiimote and closes the two connections.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getReceiveConnection()"><!-- --></A><H3>
getReceiveConnection</H3>
<PRE>
public javax.bluetooth.L2CAPConnection <B>getReceiveConnection</B>()</PRE>
<DL>
<DD><DL>

<DT><B>Returns:</B><DD>Receiving data connection</DL>
</DD>
</DL>
<HR>

<A NAME="streamData(boolean)"><!-- --></A><H3>
streamData</H3>
<PRE>
public void <B>streamData</B>(boolean&nbsp;value)</PRE>
<DL>
<DD>This method makes the Wiimote-Class reacting to incoming data.
 For just controlling and sending commands to the wiimote
 (vibration, LEDs, ...) it's not necessary to call this method.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - true, if the class should react to incoming data.
                false, if you only want to send commands to wiimote and
                only the control-connection is used.</DL>
</DD>
</DL>
<HR>

<A NAME="addInfraredListener(org.wiigee.event.InfraredListener)"><!-- --></A><H3>
addInfraredListener</H3>
<PRE>
public void <B>addInfraredListener</B>(<A HREF="../../../org/wiigee/event/InfraredListener.html" title="interface in org.wiigee.event">InfraredListener</A>&nbsp;listener)</PRE>
<DL>
<DD>The added Listener will be notified about detected infrated
 events.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - The Listener to be added.</DL>
</DD>
</DL>
<HR>

<A NAME="writeRegister(byte[], byte[])"><!-- --></A><H3>
writeRegister</H3>
<PRE>
public void <B>writeRegister</B>(byte[]&nbsp;offset,
                          byte[]&nbsp;data)
                   throws java.io.IOException</PRE>
<DL>
<DD>Write data to a register inside of the wiimote.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>offset</CODE> - The memory offset, 3 bytes.<DD><CODE>data</CODE> - The data to be written, max. 16 bytes.
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="readRegister(byte[], byte[])"><!-- --></A><H3>
readRegister</H3>
<PRE>
public void <B>readRegister</B>(byte[]&nbsp;offset,
                         byte[]&nbsp;size)
                  throws java.io.IOException</PRE>
<DL>
<DD>Makes the Wiimote respond the data of an register. The wiimotestreamer
 doesn't react to the reponse yet.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>offset</CODE> - The memory offset.<DD><CODE>size</CODE> - The size which has to be read out.
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="readEEPROM(byte[], byte[])"><!-- --></A><H3>
readEEPROM</H3>
<PRE>
public void <B>readEEPROM</B>(byte[]&nbsp;offset,
                       byte[]&nbsp;size)
                throws java.io.IOException</PRE>
<DL>
<DD>Reads data out of the EEPROM of the wiimote.
 At the moment this method is only used to read out the
 calibration data, so the wiimotestreamer doesn't react for
 every answer on this request.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>offset</CODE> - The memory offset.<DD><CODE>size</CODE> - The size.
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="sendRaw(byte[])"><!-- --></A><H3>
sendRaw</H3>
<PRE>
public void <B>sendRaw</B>(byte[]&nbsp;raw)
             throws java.io.IOException</PRE>
<DL>
<DD>Sends pure hexdata to the wiimote. If you want your wiimote
 to vibrate use sendRaw(new byte[] {0x52, 0x13, 0x01}). For other raw-commands use
 the specific wiki-sites around the web (wiili.org, wiibrew.org, ...)
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>raw</CODE> - byte representation of an command
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setLED(int)"><!-- --></A><H3>
setLED</H3>
<PRE>
public void <B>setLED</B>(int&nbsp;value)
            throws java.io.IOException</PRE>
<DL>
<DD>Enables one or more LEDs, where the value could be between 0 and 8.
 If value=1 only the left LED would light up, for value=2 the second
 led would light up, for value=3 the first and second led would light up,
 and so on...
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - Between 0 and 8, indicating which LEDs should light up
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="updateReportChannel()"><!-- --></A><H3>
updateReportChannel</H3>
<PRE>
private void <B>updateReportChannel</B>()
                          throws java.io.IOException</PRE>
<DL>
<DD>Updates the report channel according to the choosen
 functions that are enabled (acceleration, irda, ...).
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="calibrateAccelerometer()"><!-- --></A><H3>
calibrateAccelerometer</H3>
<PRE>
private void <B>calibrateAccelerometer</B>()
                             throws java.io.IOException</PRE>
<DL>
<DD>Initializes the calibration of the accerlerometer. This is done once
 per each controller in program lifetime.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setAccelerationEnabled(boolean)"><!-- --></A><H3>
setAccelerationEnabled</H3>
<PRE>
public void <B>setAccelerationEnabled</B>(boolean&nbsp;enabled)
                            throws java.io.IOException</PRE>
<DL>
<DD>Activates the acceleration sensor. You have to call the
 streamData(true) method to react to this acceleration data.
 Otherwise the wiimote would send data the whole time and
 nothing else would happen.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>setAccelerationEnabled</CODE> in class <CODE>org.wiigee.device.Device</CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setInfraredCameraEnabled(boolean)"><!-- --></A><H3>
setInfraredCameraEnabled</H3>
<PRE>
public void <B>setInfraredCameraEnabled</B>(boolean&nbsp;enabled)
                              throws java.io.IOException</PRE>
<DL>
<DD>Enables or disables the infrared camera of the wiimote with
 the default values.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>enabled</CODE> - Should the Infrared Camera be enabled.
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - In case of a connection error.</DL>
</DD>
</DL>
<HR>

<A NAME="setInfraredCameraEnabled(boolean, byte)"><!-- --></A><H3>
setInfraredCameraEnabled</H3>
<PRE>
public void <B>setInfraredCameraEnabled</B>(boolean&nbsp;enabled,
                                     byte&nbsp;infraredMode)
                              throws java.io.IOException</PRE>
<DL>
<DD>Enables the infrared camera in front of the wiimote to track
 IR sources in the field of view of the camera. This could be used
 to a lot of amazing stuff. Using this Mode could slow down the
 recognition of acceleration gestures during the increased data
 size transmitted.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>enabled</CODE> - Should the Infrared Camera be enabled.<DD><CODE>infraredMode</CODE> - The choosen Infrared Camera Mode.
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - In case of a connection error.</DL>
</DD>
</DL>
<HR>

<A NAME="vibrateForTime(long)"><!-- --></A><H3>
vibrateForTime</H3>
<PRE>
public void <B>vibrateForTime</B>(long&nbsp;milliseconds)
                    throws java.io.IOException</PRE>
<DL>
<DD>With this method you gain access over the vibrate function of
 the wiimote. You got to try which time in milliseconds would
 fit your requirements.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>milliseconds</CODE> - Time the wiimote would approx. vibrate.
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="fireInfraredEvent(int[][], int[])"><!-- --></A><H3>
fireInfraredEvent</H3>
<PRE>
public void <B>fireInfraredEvent</B>(int[][]&nbsp;coordinates,
                              int[]&nbsp;size)</PRE>
<DL>
<DD>Fires a infrared event, containig coordinate pairs (x,y) and a
 size of the detected IR spot.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>coordinates</CODE> - X and Y display coordinates.<DD><CODE>size</CODE> - The size of the spot.</DL>
</DD>
</DL>
<HR>

<A NAME="removeChar(java.lang.String, char)"><!-- --></A><H3>
removeChar</H3>
<PRE>
private java.lang.String <B>removeChar</B>(java.lang.String&nbsp;s,
                                    char&nbsp;c)</PRE>
<DL>
<DD>Removes all chars that are the same than the one given by parameter from a string given by parameter.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="fireExtensionConnectedEvent(int)"><!-- --></A><H3>
fireExtensionConnectedEvent</H3>
<PRE>
protected void <B>fireExtensionConnectedEvent</B>(int&nbsp;type)</PRE>
<DL>
<DD>Throws a disconnection event to all extensions listeners referring to the Nunchuk or WiiMote depending on the given parameter.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>type</CODE> - The type of extension connected: TYPE_NUNCHUK or TYPE_WIIMOTIONPLUS.</DL>
</DD>
</DL>
<HR>

<A NAME="fireExtensionDisconnectedEvent(int)"><!-- --></A><H3>
fireExtensionDisconnectedEvent</H3>
<PRE>
protected void <B>fireExtensionDisconnectedEvent</B>(int&nbsp;type)</PRE>
<DL>
<DD>Throws a connection event to all extensions listeners referring to the Nunchuk or WiiMote depending on the given parameter.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>type</CODE> - The type of extension disconnected: TYPE_NUNCHUK or TYPE_WIIMOTIONPLUS.</DL>
</DD>
</DL>
<HR>

<A NAME="addDataListener(org.wiigee.event.DataListener)"><!-- --></A><H3>
addDataListener</H3>
<PRE>
public void <B>addDataListener</B>(<A HREF="../../../org/wiigee/event/DataListener.html" title="interface in org.wiigee.event">DataListener</A>&nbsp;listener)</PRE>
<DL>
<DD>Adds the DataListener given by parameter to the listenerList.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - The DataListener to be added.</DL>
</DD>
</DL>
<HR>

<A NAME="addExtensionListener(org.wiigee.event.ExtensionListener)"><!-- --></A><H3>
addExtensionListener</H3>
<PRE>
public void <B>addExtensionListener</B>(<A HREF="../../../org/wiigee/event/ExtensionListener.html" title="interface in org.wiigee.event">ExtensionListener</A>&nbsp;listener)</PRE>
<DL>
<DD>Adds the ExtensionListener given by parameter to the listenerList.
 Notifies connections and disconnections.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - The ExtensionListener to be added.</DL>
</DD>
</DL>
<HR>

<A NAME="addAnalogStickListener(org.wiigee.event.AnalogStickListener)"><!-- --></A><H3>
addAnalogStickListener</H3>
<PRE>
public void <B>addAnalogStickListener</B>(<A HREF="../../../org/wiigee/event/AnalogStickListener.html" title="interface in org.wiigee.event">AnalogStickListener</A>&nbsp;listener)</PRE>
<DL>
<DD>Adds the AnalogStickListener given by parameter to the listenerList.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - The AnalogStickListener to be added.</DL>
</DD>
</DL>
<HR>

<A NAME="addNunchukAccelerometerListener(org.wiigee.event.AccelerometerListener)"><!-- --></A><H3>
addNunchukAccelerometerListener</H3>
<PRE>
public void <B>addNunchukAccelerometerListener</B>(<A HREF="../../../org/wiigee/event/AccelerometerListener.html" title="interface in org.wiigee.event">AccelerometerListener</A>&lt;<A HREF="../../../org/wiigee/device/Nunchuk.html" title="class in org.wiigee.device">Nunchuk</A>&gt;&nbsp;listener)</PRE>
<DL>
<DD>Adds the NunchukAccelerometerListener given by parameter to the listenerList.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - The NunchukAccelerometerListener to be added.</DL>
</DD>
</DL>
<HR>

<A NAME="addNunchukButtonListener(org.wiigee.event.NunchukButtonListener)"><!-- --></A><H3>
addNunchukButtonListener</H3>
<PRE>
public void <B>addNunchukButtonListener</B>(<A HREF="../../../org/wiigee/event/NunchukButtonListener.html" title="interface in org.wiigee.event">NunchukButtonListener</A>&nbsp;listener)</PRE>
<DL>
<DD>Adds the NunchukButtonListener given by parameter to the listenerList.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - The NunchukButtonListener to be added.</DL>
</DD>
</DL>
<HR>

<A NAME="addWiiMotionPlusRotationListener(org.wiigee.event.RotationListener)"><!-- --></A><H3>
addWiiMotionPlusRotationListener</H3>
<PRE>
public void <B>addWiiMotionPlusRotationListener</B>(<A HREF="../../../org/wiigee/event/RotationListener.html" title="interface in org.wiigee.event">RotationListener</A>&nbsp;listener)</PRE>
<DL>
<DD>Adds the RotationListener given by parameter to the listenerList.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - The RotationListener to be added.</DL>
</DD>
</DL>
<HR>

<A NAME="removeDataListener(org.wiigee.event.DataListener)"><!-- --></A><H3>
removeDataListener</H3>
<PRE>
public void <B>removeDataListener</B>(<A HREF="../../../org/wiigee/event/DataListener.html" title="interface in org.wiigee.event">DataListener</A>&nbsp;listener)</PRE>
<DL>
<DD>Removes the DataListener given by parameter to the listenerList.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - The FataListener to be removed.</DL>
</DD>
</DL>
<HR>

<A NAME="removeExtensionListener(org.wiigee.event.ExtensionListener)"><!-- --></A><H3>
removeExtensionListener</H3>
<PRE>
public void <B>removeExtensionListener</B>(<A HREF="../../../org/wiigee/event/ExtensionListener.html" title="interface in org.wiigee.event">ExtensionListener</A>&nbsp;listener)</PRE>
<DL>
<DD>Removes the ExtensionListener given by parameter to the listenerList.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - The ExtensionListener to be removed.</DL>
</DD>
</DL>
<HR>

<A NAME="removeAnalogStickListener(org.wiigee.event.AnalogStickListener)"><!-- --></A><H3>
removeAnalogStickListener</H3>
<PRE>
public void <B>removeAnalogStickListener</B>(<A HREF="../../../org/wiigee/event/AnalogStickListener.html" title="interface in org.wiigee.event">AnalogStickListener</A>&nbsp;listener)</PRE>
<DL>
<DD>Removes the AnalogStickListener given by parameter to the listenerList.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - The AnalogStickListener to be removed.</DL>
</DD>
</DL>
<HR>

<A NAME="removeNunchukAccelerometerListener(org.wiigee.event.AccelerometerListener)"><!-- --></A><H3>
removeNunchukAccelerometerListener</H3>
<PRE>
public void <B>removeNunchukAccelerometerListener</B>(<A HREF="../../../org/wiigee/event/AccelerometerListener.html" title="interface in org.wiigee.event">AccelerometerListener</A>&lt;<A HREF="../../../org/wiigee/device/Nunchuk.html" title="class in org.wiigee.device">Nunchuk</A>&gt;&nbsp;listener)</PRE>
<DL>
<DD>Removes the NunchukAccelerometerListener given by parameter to the listenerList.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - The NunchukAccelerometerListener to be removed.</DL>
</DD>
</DL>
<HR>

<A NAME="removeNunchukButtonListener(org.wiigee.event.NunchukButtonListener)"><!-- --></A><H3>
removeNunchukButtonListener</H3>
<PRE>
public void <B>removeNunchukButtonListener</B>(<A HREF="../../../org/wiigee/event/NunchukButtonListener.html" title="interface in org.wiigee.event">NunchukButtonListener</A>&nbsp;listener)</PRE>
<DL>
<DD>Removes the NunchukButtonListener given by parameter to the listenerList.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - The NunchukButtonListener to be removed.</DL>
</DD>
</DL>
<HR>

<A NAME="removeWiiMotionPlusAccelerometerListener(org.wiigee.event.AccelerometerListener)"><!-- --></A><H3>
removeWiiMotionPlusAccelerometerListener</H3>
<PRE>
public void <B>removeWiiMotionPlusAccelerometerListener</B>(<A HREF="../../../org/wiigee/event/AccelerometerListener.html" title="interface in org.wiigee.event">AccelerometerListener</A>&lt;<A HREF="../../../org/wiigee/device/WiiMotionPlus.html" title="class in org.wiigee.device">WiiMotionPlus</A>&gt;&nbsp;listener)</PRE>
<DL>
<DD>Removes the WiiMotionPlusListener given by parameter to the listenerList.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - The WiiMotionPlusListener to be removed.</DL>
</DD>
</DL>
<HR>

<A NAME="setWiiMotionPlusEnabled(boolean)"><!-- --></A><H3>
setWiiMotionPlusEnabled</H3>
<PRE>
public void <B>setWiiMotionPlusEnabled</B>(boolean&nbsp;enabled)
                             throws java.io.IOException</PRE>
<DL>
<DD>Enables or disables the WiiMotionPlus extension. 
 If it enables, the WiiMote will further get
 every other information, like acceleration, infrared camera (loss of precision)
 and button presses.
 Anyway the channel is updated automatically.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>enabled</CODE> - The command to enable or disable the WiiMotionPlus.
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setNunchukEnabled(boolean)"><!-- --></A><H3>
setNunchukEnabled</H3>
<PRE>
public void <B>setNunchukEnabled</B>(boolean&nbsp;enabled)
                       throws java.io.IOException</PRE>
<DL>
<DD>Enables or disables the Nunchuk extension. 
 If it enables, the WiiMote will further get
 every other information, like acceleration, infrared camera (loss of precision)
 and button presses.
 Anyway the channel is updated automatically.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>enabled</CODE> - The command to enable or disable the Nunchuk.
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setBoardEnabled(boolean)"><!-- --></A><H3>
setBoardEnabled</H3>
<PRE>
public void <B>setBoardEnabled</B>(boolean&nbsp;enabled)
                     throws java.io.IOException</PRE>
<DL>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="anyExtensionEnabled()"><!-- --></A><H3>
anyExtensionEnabled</H3>
<PRE>
public boolean <B>anyExtensionEnabled</B>()</PRE>
<DL>
<DD>Reports if there is any extension (WiiMotionPlus or Nunchuk) enabled to the calling WiiMote.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>boolean True if the WiiMotionPlus or Nunchuk is enabled, false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="isWiiMotionPlusEnabled()"><!-- --></A><H3>
isWiiMotionPlusEnabled</H3>
<PRE>
public boolean <B>isWiiMotionPlusEnabled</B>()</PRE>
<DL>
<DD>Reports if there is any WiiMotionPlus enabled to the calling WiiMote.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>boolean True if the WiiMotionPlus is enabled, false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="isWiiNunchukEnabled()"><!-- --></A><H3>
isWiiNunchukEnabled</H3>
<PRE>
public boolean <B>isWiiNunchukEnabled</B>()</PRE>
<DL>
<DD>Reports if there is any Nuncbuk enabled to the calling WiiMote.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>boolean True if the Nunchuk is enabled, false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getListenerList()"><!-- --></A><H3>
getListenerList</H3>
<PRE>
public javax.swing.event.EventListenerList <B>getListenerList</B>()</PRE>
<DL>
<DD>Gets the field that stores the list of listeners.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>EventListenerList The field listenerList.</DL>
</DD>
</DL>
<HR>

<A NAME="getNunchuk()"><!-- --></A><H3>
getNunchuk</H3>
<PRE>
public <A HREF="../../../org/wiigee/device/Nunchuk.html" title="class in org.wiigee.device">Nunchuk</A> <B>getNunchuk</B>()</PRE>
<DL>
<DD>Gets the Nunchuk of the calling WiiMote.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Nunchuk The object Nunchuk.</DL>
</DD>
</DL>
<HR>

<A NAME="getWiiMotionPlus()"><!-- --></A><H3>
getWiiMotionPlus</H3>
<PRE>
public <A HREF="../../../org/wiigee/device/WiiMotionPlus.html" title="class in org.wiigee.device">WiiMotionPlus</A> <B>getWiiMotionPlus</B>()</PRE>
<DL>
<DD>Gets the WiiMotionPlus of the calling WiiMote.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>WiiMotionPlus The object WiiMotionPlus.</DL>
</DD>
</DL>
<HR>

<A NAME="connectNunchuk()"><!-- --></A><H3>
connectNunchuk</H3>
<PRE>
public void <B>connectNunchuk</B>()</PRE>
<DL>
<DD>Sends the command to connect the Nunchuk.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="connectWiiMotionPlus()"><!-- --></A><H3>
connectWiiMotionPlus</H3>
<PRE>
public void <B>connectWiiMotionPlus</B>()</PRE>
<DL>
<DD>Sends the command to connect the WiiMotionPlus.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="disconnectNunchuk()"><!-- --></A><H3>
disconnectNunchuk</H3>
<PRE>
public void <B>disconnectNunchuk</B>()</PRE>
<DL>
<DD>Sends the command to disconnect the Nunchuk.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="disconnectWiiMotionPlus()"><!-- --></A><H3>
disconnectWiiMotionPlus</H3>
<PRE>
public void <B>disconnectWiiMotionPlus</B>()</PRE>
<DL>
<DD>Sends the command to disconnect the WiiMotionPlus.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setWiiMotionPlusCalibrated(boolean)"><!-- --></A><H3>
setWiiMotionPlusCalibrated</H3>
<PRE>
public void <B>setWiiMotionPlusCalibrated</B>(boolean&nbsp;b)</PRE>
<DL>
<DD>Sets the calibration state of the WiiMotionPlus with the given parameter.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>b</CODE> - The new calibration state of the WiiMotionPlus</DL>
</DD>
</DL>
<HR>

<A NAME="isWiiMotionPlusCalibrated()"><!-- --></A><H3>
isWiiMotionPlusCalibrated</H3>
<PRE>
public boolean <B>isWiiMotionPlusCalibrated</B>()</PRE>
<DL>
<DD>Gets the calibration state of the WiiMotionPlus.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>boolean The current calibration state of the WiiMotionPlus.</DL>
</DD>
</DL>
<HR>

<A NAME="setNunchukbuttonstate(int)"><!-- --></A><H3>
setNunchukbuttonstate</H3>
<PRE>
public void <B>setNunchukbuttonstate</B>(int&nbsp;nunchukbuttonstate)</PRE>
<DL>
<DD>Sets the button state of the Nunchuk with the given parameter.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>nunchukbuttonstate</CODE> - The new button state of the Nunchuk.</DL>
</DD>
</DL>
<HR>

<A NAME="getNunchukbuttonstate()"><!-- --></A><H3>
getNunchukbuttonstate</H3>
<PRE>
public int <B>getNunchukbuttonstate</B>()</PRE>
<DL>
<DD>Gets the button state of the Nunchuk.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>int The current button state of the Nunchuk.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Wiimote.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/wiigee/device/Nunchuk.html" title="class in org.wiigee.device"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../org/wiigee/device/WiiMotionPlus.html" title="class in org.wiigee.device"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/wiigee/device/Wiimote.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Wiimote.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
